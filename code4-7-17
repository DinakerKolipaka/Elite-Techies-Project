
CREATE TABLE Pickup_Student_Details
(
  StudentID INT NOT NULL,
  FirstName VARCHAR(50) NOT NULL,
  LastName VARCHAR(50) NOT NULL,
  ContactNo VARCHAR(20) NOT NULL,
  EmailID VARCHAR(20) NOT NULL,
  Gender INT NOT NULL,
  ArrivalDate_Time DATETIME NOT NULL,
  PortOfEntry VARCHAR(50) NULL,
  FlightBoradingCity VARCHAR(50) NOT NULL,
  FlightNumber_And_AirLine VARCHAR(30) NOT NULL,
  NumberOfBags INT NOT NULL,
  EmergencyContactName VARCHAR(50) NOT NULL,
  EmergencyContactAddress VARCHAR(100) NULL,
  EmergencyContactEmailID VARCHAR(50) NOT NULL,
  EmergencyConatctPhoneNumber VARCHAR(20) NOT NULL,
  SuperShuttleStatus INT NOT NULL,
  AccompanyingPeople INT NOT NULL,
  PRIMARY KEY (StudentID)
);

CREATE TABLE Volunteer_Details
(
  VolunteerID INT NOT NULL,
  FirstName VARCHAR(50) NOT NULL,
  LastName VARCHAR(50) NOT NULL,
  ContactNo VARCHAR(20) NOT NULL,
  EmailID VARCHAR(50) NOT NULL,
  VolunteerService INT NOT NULL,
  TShirtSize INT NULL,
  ContactAddress VARCHAR(100) NOT NULL,
  FromDate1 DATETIME NOT NULL,
  ToDate1 DATETIME NOT NULL,
  FromDate2 DATETIME NULL,
  ToDate2 DATETIME NULL,
  FromDate3 DATETIME NULL,
  ToDate3 DATETIME NULL,
  NoOfDays INT NULL,
  NoOfPeople INT NULL,
  PRIMARY KEY (VolunteerID)
);

CREATE TABLE Student_Volunteer_Mapping
(
  StudentID INT NOT NULL,
  VolunteerID INT NOT NULL,
  Service_Provided INT NOT NULL,
  PRIMARY KEY (Service_Provided, VolunteerID, StudentID),
  FOREIGN KEY (VolunteerID) REFERENCES VolunteerDetails(VolunteerID),
  FOREIGN KEY (StudentID) REFERENCES Pickup_Student_Details(StudentID)
);

CREATE TABLE Automated_Messages
(
  MessageID INT NOT NULL,
  MessageDescription VARCHAR(200) NOT NULL,
  PRIMARY KEY (MessageID)
);

CREATE TABLE Apartment_Details
(
  AptID INT NOT NULL,
  Name VARCHAR(50) NOT NULL,
  ContactAddress VARCHAR(50) NOT NULL,
  Photos VARBINARY(MAX) NULL,
  Rent MONEY NOT NULL,
  OtherExpenses MONEY NOT NULL,
  ApartmentType VARCHAR(30) NOT NULL,
  Area VARCHAR(50) NULL,
  NoOfRoomsAvailable INT NOT NULL,
  MaxOccupancy INT NULL,
  Amenities VARCHAR(100) NULL,
  PRIMARY KEY (ApttID)
);


CREATE TABLE Message_Content	
(
  MessageId INT NOT NULL,
  AuthorID VARCHAR(50) NOT NULL,
  MessageSubject VARCHAR(100) NOT NULL,
  Body VARCHAR(200) NOT NULL,
  MessageDate DATETIME NOT NULL,
  PRIMARY KEY (MessageId)
);

CREATE TABLE Discussion_Forum
(
  ThreadID INT NOT NULL,
  MessageId INT NOT NULL,
  PRIMARY KEY (ThreadID),
  FOREIGN KEY (MessageId) REFERENCES Message_Content(MessageId)
);

CREATE TABLE Sub_Leases
(
  SubLeaseID INT NOT NULL,
  AptID INT NOT NULL,
  AptDescription VARCHAR(200) NOT NULL,
  AdvertiserName VARCHAR(50) NOT NULL,
  PhoneNumber VARCHAR(20) NOT NULL,
  EmailID VARCHAR(50) NOT NULL,
  LeaseEndDate DATETIME NOT NULL,
  DateOfAvailability DATETIME NOT NULL,
  Smoking INT NOT NULL,
  Drinking INT NOT NULL,
  VegNonVeg INT NOT NULL,
  Budget INT NOT NULL,
  SpokenLanguages VARCHAR(20) NOT NULL,
  PRIMARY KEY (SubLeaseID),
  FOREIGN KEY (AptID) REFERENCES Apartment_Details(AptID)
);

CREATE TABLE Groups
(
  GroupID INT NOT NULL,
  GroupStatus INT NOT NULL,
  GroupName VARCHAR(50) NOT NULL,
  AptID INT NULL,
  ThreadID INT NULL,
  PRIMARY KEY (GroupID),
  FOREIGN KEY (AptID) REFERENCES Apartment_Details(AptID),
  FOREIGN KEY (ThreadID) REFERENCES DiscussionForum(ThreadID)
);

CREATE TABLE Student_Profile
(
  StudentID INT NOT NULL,
  Firstname VARCHAR(50) NOT NULL,
  LastName VARCHAR(50) NOT NULL,
  ContactNo VARCHAR(20) NOT NULL,
  EmailID VARCHAR(50) NOT NULL,
  Gender INT NOT NULL,
  Smoking INT NOT NULL,
  Drinking INT NOT NULL,
  FoodPreferences INT NOT NULL,
  PurposeOfRegistering INT NOT NULL,
  LoginPassword VARCHAR(20) NOT NULL,
  MajorOfStudies VARCHAR(20) NOT NULL,
  NativeState VARCHAR(30) NOT NULL,
  GroupID INT NULL,
  Smoking_Pref INT NOT NULL,
  Drinking_Pref INT NOT NULL,
  FoodPreferences_Pref INT NOT NULL,
  Budget_Pref INT NOT NULL,
  NumberOfRoommates_Pref INT NOT NULL,
  SpeakingLanguages_Pref INT NOT NULL,
  PRIMARY KEY (StudentID),
  FOREIGN KEY (GroupID) REFERENCES Groups(GroupID)
);

CREATE TABLE Notifications_Req_Tracker
(
  RequestID INT NOT NULL,
  FromStudent INT NOT NULL,
  ToStudent INT NULL,
  ToGroup INT NULL,
  RequestStatus INT NOT NULL,
  PRIMARY KEY (RequestID),
  FOREIGN KEY (ToGroup) REFERENCES Groups(GroupID),
  FOREIGN KEY (ToStudent) REFERENCES Student_Profile(StudentID),
  FOREIGN KEY (FromStudent) REFERENCES Student_Profile(StudentID)
);


